[gd_scene load_steps=18 format=3 uid="uid://bsm7xcjml3o27"]

[ext_resource type="Texture2D" uid="uid://cukdjdnfjg4x6" path="res://Main Assets/Ghost/Ghost_Body_01.png" id="1_3tcnd"]
[ext_resource type="Script" path="res://Script/GameOverScreen.gd" id="1_eaivu"]
[ext_resource type="Texture2D" uid="uid://bmtlbc44n3vm3" path="res://Main Assets/Walls/wall_atlas.png" id="2_7h60b"]

[sub_resource type="GDScript" id="GDScript_uknlp"]
resource_name = "Global.gd"
script/source = "extends Node2D

var pacman_speed = 100
var ghost_speed = 80
var frightened_duration = 10
var current_level = 1

# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	pass
"

[sub_resource type="GDScript" id="GDScript_l1lm1"]
resource_name = "Scarlet.gd"
script/source = "# Scarlet (Red Ghost) - Greedy Pathfinding (A* style)
extends NavigationAgent2D

var pacman
var ghost_speed = 80  # Default speed, will be overridden by Global.gd

func _ready():
	pacman = get_node(\"Pac Man\")
	ghost_speed = Global.ghost_speed  # Use the global ghost speed based on level

func _process(delta):
	if pacman:
		# Check if the ghost is frightened
		if Global.is_frightened:
			# Freeze the ghost's movement if in the frightened state
			target_position = self.global_position  # Stay in the same position (no movement)
			return
		
		# Directly target Pac-Man using A* pathfinding
		target_position = pacman.global_position
"

[sub_resource type="GDScript" id="GDScript_mm2nj"]
resource_name = "Blush.gd"
script/source = "# Blush (Pink Ghost) - Prediction-Based Pathfinding
extends NavigationAgent2D

var pacman
var ghost_speed = 80  # Default speed, will be overridden by Global.gd

func _ready():
	pacman = get_node(\"Pac Man\")
	ghost_speed = Global.ghost_speed  # Use the global ghost speed based on level

func _process(delta):
	if pacman:
		# Check if the ghost is frightened
		if Global.is_frightened:
			# Freeze the ghost's movement if in the frightened state
			target_position = self.global_position  # Stay in the same position (no movement)
			return
		
		# Calculate predicted target position (4 tiles ahead of Pac-Man's movement)
		var direction = pacman.velocity.normalized()  # Assuming Pac-Man has velocity
		var prediction_offset = direction * 4 * 16  # Move 4 tiles ahead of Pac-Man (16 pixels per tile)
		target_position = pacman.global_position + prediction_offset
"

[sub_resource type="GDScript" id="GDScript_ja61d"]
resource_name = "Azure.gd"
script/source = "# Azure (Cyan Ghost) - Combined Targeting
extends NavigationAgent2D

var pacman
var scarlet
var ghost_speed = 80  # Default speed, will be overridden by Global.gd

func _ready():
	pacman = get_node(\"Pac Man\")
	scarlet = get_node(\"Ghosts/Scarlet\")
	ghost_speed = Global.ghost_speed  # Use the global ghost speed based on level

func _process(delta):
	if pacman and scarlet:
		# Check if the ghost is frightened
		if Global.is_frightened:
			# Freeze the ghost's movement if in the frightened state
			target_position = self.global_position  # Stay in the same position (no movement)
			return
		
		# Calculate the midpoint between Pac-Man and Blinky (Scarlet)
		var midpoint = (pacman.global_position + scarlet.global_position) / 2
		var offset = (midpoint - pacman.global_position).normalized() * 4 * 16  # Move 4 tiles towards midpoint
		target_position = midpoint + offset
"

[sub_resource type="GDScript" id="GDScript_jnq6f"]
resource_name = "Amber.gd"
script/source = "# Amber (Orange Ghost) - Proximity-Based Switching
extends NavigationAgent2D

var pacman
var ghost_speed = 80  # Default speed, can be overridden by Global.gd
var wander_target = Vector2()
var chasing = true
var chase_distance = 200  # Distance at which Amber starts chasing Pac-Man

func _ready():
	pacman = get_node(\"Pac Man\")
	ghost_speed = Global.ghost_speed  # Use the global ghost speed

func _process(delta):
	if pacman:
		# Check if Pac-Man is in the frightened state
		if Global.is_frightened:
			# Freeze the ghost's movement if in the frightened state
			target_position = self.global_position  # Stay in the same position (no movement)
			return
		
		# Calculate the distance to Pac-Man
		var distance_to_pacman = self.global_position.distance_to(pacman.global_position)  # Use global_position for Pac-Man
		
		if distance_to_pacman < chase_distance:
			# Chase Pac-Man if within chase range
			chasing = true
			target_position = pacman.global_position  # Set the target position to Pac-Man's global position
		else:
			# Wander randomly when too far from Pac-Man
			if chasing:
				wander_target = get_random_position()  # Get a random point in the maze
			chasing = false
			target_position = wander_target  # Set the target position to a random point

func get_random_position():
	# For simplicity, this will generate a random position within the level bounds
	var level_bounds = get_node(\".\").get_rect()  # Assuming the level node has a rectangle
	return level_bounds.position + Vector2(randf_range(0, level_bounds.size.x), randf_range(0, level_bounds.size.y))
"

[sub_resource type="TileMapPattern" id="TileMapPattern_e6met"]
tile_data = PackedInt32Array(0, 458752, 0, 65536, 327680, 0, 131072, 65536, 1, 1, 131072, 0, 131073, 196608, 0, 2, 131072, 0, 131074, 196608, 0, 3, 131072, 0, 131075, 196608, 0, 4, 393216, 0, 65540, 262144, 0, 131076, 0, 1)

[sub_resource type="TileMapPattern" id="TileMapPattern_xueyu"]
tile_data = PackedInt32Array(0, 458752, 0, 65536, 327680, 0, 131072, 65536, 1, 1, 131072, 0, 131073, 196608, 0, 2, 131072, 0, 131074, 196608, 0, 3, 393216, 0, 65539, 262144, 0, 131075, 0, 1)

[sub_resource type="TileMapPattern" id="TileMapPattern_a7cv0"]
tile_data = PackedInt32Array(0, 458752, 0, 65536, 327680, 0, 131072, 327680, 0, 196608, 327680, 0, 262144, 65536, 1, 1, 393216, 0, 65537, 262144, 0, 131073, 262144, 0, 196609, 262144, 0, 262145, 0, 1)

[sub_resource type="TileMapPattern" id="TileMapPattern_80qlm"]
tile_data = PackedInt32Array(0, 458752, 0, 65536, 65536, 1, 1, 131072, 0, 65537, 196608, 0, 2, 131072, 0, 65538, 196608, 0, 3, 131072, 0, 65539, 196608, 0, 4, 393216, 0, 65540, 0, 1)

[sub_resource type="TileMapPattern" id="TileMapPattern_m5te8"]
tile_data = PackedInt32Array(0, 393216, 1610612736, 65536, 458752, 1610612736, 1, 262144, 1610612736, 65537, 327680, 1610612736, 2, 262144, 1610612736, 65538, 327680, 1610612736, 3, 262144, 1610612736, 65539, 131072, 1610612737, 131075, 131072, 1610612736, 196611, 131072, 1610612736, 262147, 458752, 1610612736, 4, 262144, 1610612736, 65540, 196608, 1610612737, 131076, 196608, 1610612736, 196612, 196608, 1610612736, 262148, 65536, 1610612737, 5, 262144, 1610612736, 65541, 327680, 1610612736, 6, 262144, 1610612736, 65542, 327680, 1610612736, 7, 0, 1610612737, 65543, 65536, 1610612737)

[sub_resource type="TileMapPattern" id="TileMapPattern_lmxka"]
tile_data = PackedInt32Array(196608, 131072, 0, 262144, 196608, 0, 1, 458752, 0, 65537, 327680, 0, 131073, 327680, 0, 196609, 131072, 1, 262145, 196608, 0, 2, 393216, 0, 65538, 262144, 0, 131074, 262144, 0, 196610, 262144, 1, 262146, 196608, 0, 196611, 131072, 0, 262147, 196608, 0)

[sub_resource type="TileMapPattern" id="TileMapPattern_qi2w4"]
tile_data = PackedInt32Array(0, 458752, 0, 65536, 327680, 0, 131072, 327680, 0, 196608, 327680, 0, 262144, 65536, 1, 1, 131072, 0, 65537, 327680, 1, 131073, 262144, 0, 196609, 262144, 0, 262145, 0, 1, 2, 131072, 0, 65538, 196608, 0, 3, 393216, 0, 65539, 0, 1)

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_ud538"]
texture = ExtResource("2_7h60b")
texture_region_size = Vector2i(32, 32)
0:0/0 = 0
0:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:0/0/physics_layer_0/angular_velocity = 0.0
0:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-12, 0, 9, 0, 9, 12, -12, 12)
1:0/0 = 0
1:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:0/0/physics_layer_0/angular_velocity = 0.0
1:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-9, 0, 12, 0, 12, 12, -9, 12)
2:0/0 = 0
2:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:0/0/physics_layer_0/angular_velocity = 0.0
2:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-12, 0, 12, 0, 12, 3, -12, 3)
3:0/0 = 0
3:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:0/0/physics_layer_0/angular_velocity = 0.0
3:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-12, -3, 12, -3, 12, 0, -12, 0)
4:0/0 = 0
4:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:0/0/physics_layer_0/angular_velocity = 0.0
4:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-3, -12, 0, -12, 0, 12, -3, 12)
5:0/0 = 0
5:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:0/0/physics_layer_0/angular_velocity = 0.0
5:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(0, -12, 3, -12, 3, 12, 0, 12)
6:0/0 = 0
6:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:0/0/physics_layer_0/angular_velocity = 0.0
6:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-12, 0, 0, 0, 0, 12, -3, 12, -3, 3, -12, 3)
7:0/0 = 0
7:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:0/0/physics_layer_0/angular_velocity = 0.0
7:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(0, 0, 12, 0, 12, 3, 3, 3, 3, 12, 0, 12)
0:1/0 = 0
0:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:1/0/physics_layer_0/angular_velocity = 0.0
0:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-12, -3, -3, -3, -3, -12, 0, -12, 0, 0, -12, 0)
1:1/0 = 0
1:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:1/0/physics_layer_0/angular_velocity = 0.0
1:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(0, -12, 3, -12, 3, -3, 12, -3, 12, 0, 0, 0)
3:1/0 = 0
3:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:1/0/physics_layer_0/angular_velocity = 0.0
3:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-12, -3, 3, -3, 3, 12, 0, 12, 0, 0, -12, 0)
4:1/0 = 0
4:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:1/0/physics_layer_0/angular_velocity = 0.0
4:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-3, -12, 0, -12, 0, 0, 12, 0, 12, 3, -3, 3)
5:1/0 = 0
5:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:1/0/physics_layer_0/angular_velocity = 0.0
5:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-3, -3, 12, -3, 12, 0, 0, 0, 0, 12, -3, 12)
6:1/0 = 0
6:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:1/0/physics_layer_0/angular_velocity = 0.0
6:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-12, 0, 0, 0, 0, 12, -12, 12)
7:1/0 = 0
7:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:1/0/physics_layer_0/angular_velocity = 0.0
7:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(0, 0, 12, 0, 12, 12, 0, 12)
0:2/0 = 0
0:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:2/0/physics_layer_0/angular_velocity = 0.0
0:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-12, -12, 0, -12, 0, 0, -12, 0)
1:2/0 = 0
1:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:2/0/physics_layer_0/angular_velocity = 0.0
1:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(0, -12, 12, -12, 12, 0, 0, 0)
2:2/0 = 0
2:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:2/0/physics_layer_0/angular_velocity = 0.0
3:2/0 = 0
3:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:2/0/physics_layer_0/angular_velocity = 0.0
4:2/0 = 0
4:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:2/0/physics_layer_0/angular_velocity = 0.0
4:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-12, -12, 12, -12, 12, 12, 0, 12, 0, 3, -3, 3, -3, 0, -12, 0)
5:2/0 = 0
5:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:2/0/physics_layer_0/angular_velocity = 0.0
5:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-12, -12, 12, -12, 12, 0, 3, 0, 3, 3, 0, 3, 0, 12, -12, 12)
6:2/0 = 0
6:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:2/0/physics_layer_0/angular_velocity = 0.0
6:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-12, 0, -3, 0, -3, -3, 0, -3, 0, -12, 12, -12, 12, 12, -12, 12)
7:2/0 = 0
7:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:2/0/physics_layer_0/angular_velocity = 0.0
7:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-12, -12, 0, -12, 0, -3, 3, -3, 3, 0, 12, 0, 12, 12, -12, 12)
0:3/0 = 0
0:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:3/0/physics_layer_0/angular_velocity = 0.0
0:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(0, -12, 12, -12, 12, 12, 0, 12)
1:3/0 = 0
1:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:3/0/physics_layer_0/angular_velocity = 0.0
1:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-12, -12, 0, -12, 0, 12, -12, 12)
2:3/0 = 0
2:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:3/0/physics_layer_0/angular_velocity = 0.0
2:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-12, -12, 12, -12, 12, 0, -12, 0)
3:3/0 = 0
3:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:3/0/physics_layer_0/angular_velocity = 0.0
3:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-12, 0, 12, 0, 12, 12, -12, 12)
4:3/0 = 0
4:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:3/0/physics_layer_0/angular_velocity = 0.0
4:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-12, 0, -3, 0, -3, -3, 0, -3, 0, -12, 12, -12, 12, 12, -12, 12)
5:3/0 = 0
5:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:3/0/physics_layer_0/angular_velocity = 0.0
5:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-12, -12, 12, -12, 12, 12, 0, 12, 0, 3, -3, 3, -3, 0, -12, 0)
6:3/0 = 0
6:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:3/0/physics_layer_0/angular_velocity = 0.0
6:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-12, -12, 0, -12, 0, -3, 3, -3, 3, 0, 12, 0, 12, 12, -12, 12)
7:3/0 = 0
7:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:3/0/physics_layer_0/angular_velocity = 0.0
7:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-12, -12, 12, -12, 12, 0, 3, 0, 3, 3, 0, 3, 0, 12, -12, 12)
0:4/0 = 0
0:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:4/0/physics_layer_0/angular_velocity = 0.0
0:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-12, -12, 12, -12, 12, 0, 3, 0, 3, 3, 0, 3, 0, 12, -12, 12)
1:4/0 = 0
1:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:4/0/physics_layer_0/angular_velocity = 0.0
1:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-12, -12, 12, -12, 12, 12, 0, 12, 0, 3, -3, 3, -3, 0, -12, 0)
2:4/0 = 0
2:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:4/0/physics_layer_0/angular_velocity = 0.0
2:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-12, -12, 0, -12, 0, -3, 3, -3, 3, 0, 12, 0, 12, 12, -12, 12)
3:4/0 = 0
3:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:4/0/physics_layer_0/angular_velocity = 0.0
3:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-3, -3, 0, -3, 0, -12, 12, -12, 12, 12, -12, 12, -12, 0, -3, 0)
4:4/0 = 0
4:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:4/0/physics_layer_0/angular_velocity = 0.0
4:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(0, -6, 6, -6, 6, -12, 12, -12, 12, 12, -12, 12, -12, -3, 0, -3)
5:4/0 = 0
5:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:4/0/physics_layer_0/angular_velocity = 0.0
5:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-12, -12, -6, -12, -6, -6, 0, -6, 0, -3, 12, -3, 12, 12, -12, 12)
6:4/0 = 0
6:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:4/0/physics_layer_0/angular_velocity = 0.0
7:4/0 = 0
7:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:4/0/physics_layer_0/angular_velocity = 0.0
2:1/0 = 0
2:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:1/0/physics_layer_0/angular_velocity = 0.0
2:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(0, -12, 3, -12, 3, 3, -12, 3, -12, 0, 0, 0)

[sub_resource type="TileSet" id="TileSet_u6ctj"]
tile_size = Vector2i(24, 24)
physics_layer_0/collision_layer = 2
sources/0 = SubResource("TileSetAtlasSource_ud538")
pattern_0 = SubResource("TileMapPattern_e6met")
pattern_1 = SubResource("TileMapPattern_xueyu")
pattern_2 = SubResource("TileMapPattern_a7cv0")
pattern_3 = SubResource("TileMapPattern_80qlm")
pattern_4 = SubResource("TileMapPattern_m5te8")
pattern_5 = SubResource("TileMapPattern_lmxka")
pattern_6 = SubResource("TileMapPattern_qi2w4")

[node name="Level" type="Node2D"]
script = SubResource("GDScript_uknlp")

[node name="Navigation" type="NavigationAgent2D" parent="."]

[node name="PacMan" type="Node2D" parent="."]

[node name="Ghosts" type="Node2D" parent="."]

[node name="Scarlet" type="Node2D" parent="Ghosts"]

[node name="NavigationAgent2D" type="NavigationAgent2D" parent="Ghosts/Scarlet"]
script = SubResource("GDScript_l1lm1")

[node name="Sprite2D" type="Sprite2D" parent="Ghosts/Scarlet"]
position = Vector2(-52.25, -12.375)
scale = Vector2(1.28125, 1.29688)
texture = ExtResource("1_3tcnd")

[node name="Blush" type="Node2D" parent="Ghosts"]

[node name="NavigationAgent2D" type="NavigationAgent2D" parent="Ghosts/Blush"]
script = SubResource("GDScript_mm2nj")

[node name="Sprite2D" type="Sprite2D" parent="Ghosts/Blush"]

[node name="Azure" type="Node2D" parent="Ghosts"]

[node name="NavigationAgent2D" type="NavigationAgent2D" parent="Ghosts/Azure"]
script = SubResource("GDScript_ja61d")

[node name="Sprite2D" type="Sprite2D" parent="Ghosts/Azure"]

[node name="Amber" type="Node2D" parent="Ghosts"]

[node name="NavigationAgent2D" type="NavigationAgent2D" parent="Ghosts/Amber"]
script = SubResource("GDScript_jnq6f")

[node name="Sprite2D" type="Sprite2D" parent="Ghosts/Amber"]

[node name="Maze" type="Node2D" parent="."]

[node name="GameOverScreen" type="Control" parent="."]
layout_mode = 3
anchors_preset = 0
offset_right = 726.0
offset_bottom = 404.0
script = ExtResource("1_eaivu")

[node name="Menu" type="Panel" parent="GameOverScreen"]
layout_mode = 0
offset_right = 730.0
offset_bottom = 407.0

[node name="Game Over" type="Label" parent="GameOverScreen"]
layout_mode = 0
offset_left = 251.0
offset_top = -16.0
offset_right = 541.0
offset_bottom = 134.0
theme_override_colors/font_color = Color(0.584314, 0, 0, 1)
theme_override_colors/font_outline_color = Color(0, 0, 0, 1)
theme_override_font_sizes/font_size = 45
text = "Game Over"
vertical_alignment = 1

[node name="Try Again" type="Button" parent="GameOverScreen"]
layout_mode = 0
offset_left = 179.0
offset_top = 282.0
offset_right = 337.0
offset_bottom = 335.0
text = "Try Again"

[node name="Quit" type="Button" parent="GameOverScreen"]
layout_mode = 0
offset_left = 427.0
offset_top = 282.0
offset_right = 584.0
offset_bottom = 336.0
text = "Quit"

[node name="Node" type="Node" parent="."]

[node name="TileMap" type="TileMap" parent="Node"]
tile_set = SubResource("TileSet_u6ctj")
format = 2
layer_0/tile_data = PackedInt32Array(-131076, 458752, 1, -65540, 0, 3, -4, 0, 3, 65532, 0, 3, -196605, 393216, 1, -131069, 65536, 3, -65533, 65536, 3, 3, 65536, 3, 131068, 65536, 2, -131075, 196608, 3, 131069, 131072, 3, -131074, 196608, 3, 131070, 131072, 3, -131073, 131072, 2, 131071, 131072, 3, -196608, 131072, 2, 65536, 131072, 3, -196607, 196608, 3, 65537, 131072, 3, -196606, 196608, 3, 65538, 131072, 3, 65539, 0, 2, -393214, 458752, 0, -327678, 65536, 1, -393213, 131072, 0, -327677, 196608, 0, -393212, 131072, 0, -327676, 196608, 0, -589819, 458752, 0, -524283, 327680, 0, -458747, 327680, 0, -393211, 131072, 1, -327675, 196608, 1, -262139, 327680, 0, -196603, 327680, 0, -131067, 65536, 1, -589818, 393216, 0, -524282, 262144, 0, -458746, 262144, 0, -393210, 262144, 0, -327674, 262144, 0, -262138, 262144, 0, -196602, 262144, 0, -131066, 0, 1, 5, 458752, 0, 65541, 327680, 0, 131077, 327680, 0, 196613, 327680, 0, 262149, 65536, 1, 6, 393216, 0, 65542, 262144, 0, 131078, 262144, 0, 196614, 262144, 0, 262150, 0, 1, 393218, 458752, 0, 458754, 65536, 1, 393219, 131072, 0, 458755, 196608, 0, 393220, 131072, 0, 458756, 196608, 0, 393221, 131072, 0, 458757, 196608, 0, 393222, 393216, 0, 458758, 0, 1, -524292, 393216, 1610612736, -458756, 458752, 1610612736, -524291, 262144, 1610612736, -458755, 327680, 1610612736, -524290, 262144, 1610612736, -458754, 327680, 1610612736, -524289, 262144, 1610612736, -458753, 131072, 1610612737, -393217, 131072, 1610612736, -327681, 131072, 1610612736, -262145, 458752, 1610612736, -589824, 262144, 1610612736, -524288, 196608, 1610612737, -458752, 196608, 1610612736, -393216, 196608, 1610612736, -327680, 65536, 1610612737, -589823, 262144, 1610612736, -524287, 327680, 1610612736, -589822, 262144, 1610612736, -524286, 327680, 1610612736, -589821, 0, 1610612737, -524285, 65536, 1610612737, 262140, 393216, 1610612736, 327676, 458752, 1610612736, 262141, 262144, 1610612736, 327677, 327680, 1610612736, 262142, 262144, 1610612736, 327678, 327680, 1610612736, 262143, 262144, 1610612736, 327679, 131072, 1610612737, 393215, 131072, 1610612736, 458751, 131072, 1610612736, 524287, 458752, 1610612736, 196608, 262144, 1610612736, 262144, 196608, 1610612737, 327680, 196608, 1610612736, 393216, 196608, 1610612736, 458752, 65536, 1610612737, 196609, 262144, 1610612736, 262145, 327680, 1610612736, 196610, 262144, 1610612736, 262146, 327680, 1610612736, 196611, 0, 1610612737, 262147, 65536, 1610612737, 65529, 458752, 0, 131065, 327680, 0, 196601, 327680, 0, 262137, 327680, 0, 327673, 65536, 1, 65530, 393216, 0, 131066, 262144, 0, 196602, 262144, 0, 262138, 262144, 0, 327674, 0, 1, 458745, 458752, 0, 524281, 65536, 1, 458746, 131072, 0, 524282, 196608, 0, 458747, 131072, 0, 524283, 196608, 0, 458748, 131072, 0, 524284, 196608, 0, 458749, 393216, 0, 524285, 0, 1, 786440, 131072, 0, 786441, 131072, 0, 786442, 131072, 0, 786443, 393216, 0, 851979, 0, 1, 851978, 196608, 0, 851977, 196608, 0, 851976, 196608, 0, 851971, 196608, 0, 786435, 131072, 0, 786434, 458752, 0, 851970, 65536, 1, 786436, 131072, 0, 851972, 196608, 0, 589829, 458752, 0, 655365, 327680, 0, 720901, 327680, 0, 786437, 131072, 1, 851973, 196608, 0, 589830, 393216, 0, 655366, 262144, 0, 720902, 262144, 0, 786438, 262144, 1, 851974, 196608, 0, 786439, 131072, 0, 851975, 196608, 0, 655356, 393216, 1610612736, 720892, 458752, 1610612736, 655357, 262144, 1610612736, 720893, 327680, 1610612736, 655358, 262144, 1610612736, 720894, 327680, 1610612736, 655359, 262144, 1610612736, 720895, 131072, 1610612737, 786431, 131072, 1610612736, 851967, 131072, 1610612736, 917503, 458752, 1610612736, 589824, 262144, 1610612736, 655360, 196608, 1610612737, 720896, 196608, 1610612736, 786432, 196608, 1610612736, 851968, 65536, 1610612737, 589825, 262144, 1610612736, 655361, 327680, 1610612736, 589826, 262144, 1610612736, 655362, 327680, 1610612736, 589827, 0, 1610612737, 655363, 65536, 1610612737, 851960, 131072, 0, 917496, 196608, 0, 655353, 458752, 0, 720889, 327680, 0, 786425, 327680, 0, 851961, 131072, 1, 917497, 196608, 0, 655354, 393216, 0, 720890, 262144, 0, 786426, 262144, 0, 851962, 262144, 1, 917498, 196608, 0, 851963, 131072, 0, 917499, 196608, 0, 851964, 131072, 0, 917500, 196608, 0, 851965, 393216, 0, 917501, 0, 1, 851959, 131072, 0, 851958, 131072, 0, 851956, 458752, 0, 851957, 131072, 0, 917495, 196608, 0, 917494, 196608, 0, 917493, 196608, 0, 917492, 65536, 1, 393224, 458752, 0, 458760, 327680, 0, 524296, 327680, 0, 589832, 327680, 0, 655368, 65536, 1, 393225, 131072, 0, 458761, 327680, 1, 524297, 262144, 0, 589833, 262144, 0, 655369, 0, 1, 393226, 131072, 0, 458762, 196608, 0, 393227, 393216, 0, 458763, 0, 1, 458743, 458752, 268435456, 458742, 131072, 268435456, 458741, 131072, 268435456, 458740, 393216, 268435456, 524279, 327680, 268435456, 524278, 327680, 268435457, 524277, 196608, 268435456, 524276, 0, 268435457, 589815, 327680, 268435456, 589814, 262144, 268435456, 655351, 327680, 268435456, 655350, 262144, 268435456, 720887, 65536, 268435457, 720886, 0, 268435457, -589816, 458752, 0, -524280, 65536, 1, -589815, 131072, 0, -589814, 131072, 0, -524279, 196608, 0, -524278, 196608, 0, -524277, 0, 1, -589813, 393216, 0, -524295, 0, 805306369, -458759, 262144, 805306368, -393223, 262144, 805306368, -327687, 262144, 805306368, -262151, 262144, 805306368, -196615, 262144, 805306368, -131079, 262144, 805306368, -65543, 393216, 805306368, -327686, 196608, 805306369, -262150, 131072, 805306369, -327685, 196608, 805306368, -262149, 131072, 805306368, -327684, 196608, 805306368, -262148, 131072, 805306368, -524294, 65536, 805306369, -458758, 327680, 805306368, -393222, 327680, 805306368, -196614, 327680, 805306368, -131078, 327680, 805306368, -65542, 458752, 805306368, -327683, 65536, 805306369, -262147, 458752, 805306368, -65550, 131072, 3, 65522, 196608, 3, -65549, 131072, 3, 65523, 196608, 3, -65548, 131072, 3, 65524, 196608, 3, -65547, 131072, 3, 65525, 196608, 3, -65546, 131072, 3, 65526, 196608, 3, -262153, 65536, 3, -196617, 65536, 3, -131081, 65536, 3, -65545, 0, 2, 65527, 393216, 1, 131063, 65536, 3, 196599, 65536, 3, 262135, 65536, 3, 327671, 0, 2, 327670, 131072, 3, 327669, 131072, 3, 327668, 131072, 3, 327667, 131072, 3, 327666, 327680, 2, 393202, 65536, 3, 458738, 65536, 3, 524274, 65536, 3, 589810, 65536, 3, 655346, 393216, 3, 720882, 458752, 3, 720883, 196608, 0, 655347, 131072, 0, 655348, 393216, 0, 720884, 0, 1, 786418, 65536, 3, 851954, 65536, 3, 917490, 65536, 3, 983026, 65536, 3, 1048562, 458752, 2, 1048563, 196608, 3, 1048564, 196608, 3, 1048565, 196608, 3, 1048566, 196608, 3, 1048567, 196608, 3, 1048568, 196608, 3, 1048569, 196608, 3, 1048570, 196608, 3, 1048571, 196608, 3, 1048572, 196608, 3, 1048573, 196608, 3, 1048574, 196608, 3, 1048575, 196608, 3, 983040, 196608, 3, 983041, 196608, 3, 983042, 196608, 3, 983043, 196608, 3, 983044, 196608, 3, 983045, 196608, 3, 983046, 196608, 3, 983047, 196608, 3, 983048, 196608, 3, 983049, 196608, 3, 983050, 196608, 3, 983051, 196608, 3, 983052, 196608, 3, 983053, 393216, 2, 917517, 0, 3, 851981, 0, 3, 786445, 0, 3, 720909, 0, 3, 655373, 327680, 3, 589837, 262144, 3, 655372, 196608, 0, 589836, 131072, 0, 589835, 458752, 0, 655371, 65536, 1, 524301, 0, 3, 458765, 0, 3, 393229, 0, 3, 327693, 0, 3, 262157, 262144, 2, 262156, 131072, 3, 262155, 131072, 3, 262154, 131072, 3, 262153, 131072, 3, 262152, 65536, 2, 196616, 0, 3, 131080, 0, 3, 65544, 0, 3, 8, 458752, 1, 9, 196608, 3, 10, 196608, 3, 11, 196608, 3, 12, 196608, 3, 13, 196608, 3, -131059, 131072, 3, -131060, 131072, 3, -131061, 131072, 3, -131062, 131072, 3, -131063, 131072, 3, -131064, 65536, 2, -196600, 0, 3, -262136, 0, 3, -327672, 0, 3, -393208, 458752, 1, -393207, 196608, 3, -393206, 196608, 3, -393205, 196608, 3, -393204, 196608, 3, -393203, 393216, 2, -327689, 393216, 1, -327690, 196608, 3, -327691, 196608, 3, -327692, 196608, 3, -327693, 196608, 3, -327694, 458752, 2, -393230, 65536, 3, -458766, 65536, 3, -524302, 65536, 3, -589838, 65536, 3, -655374, 65536, 3, -720910, 65536, 3, -786446, 65536, 3, -458739, 0, 3, -524275, 0, 3, -589811, 0, 3, -655347, 0, 3, -720883, 0, 3, -786419, 0, 3, -851955, 0, 3, -851982, 65536, 3, -917518, 327680, 2, -917491, 0, 3, -983027, 262144, 2, -851966, 458752, 0, -720894, 65536, 1, -851965, 131072, 0, -720893, 196608, 0, -851964, 131072, 0, -720892, 196608, 0, -851963, 131072, 0, -720891, 196608, 0, -851960, 458752, 0, -720888, 65536, 1, -851959, 131072, 0, -720887, 196608, 0, -851958, 131072, 0, -720886, 196608, 0, -786430, 327680, 0, -851962, 393216, 0, -786426, 262144, 0, -720890, 0, 1, -786424, 327680, 0, -851957, 393216, 0, -786421, 262144, 0, -720885, 0, 1, -720896, 0, 1, -655361, 65536, 1, -786432, 262144, 0, -851968, 262144, 0, -917504, 262144, 0, -720897, 327680, 0, -786433, 327680, 0, -851969, 327680, 0, -917505, 65536, 4, -983040, 0, 4, -917506, 131072, 3, -917507, 131072, 3, -917508, 131072, 3, -917509, 131072, 3, -917510, 131072, 3, -917511, 131072, 3, -917512, 131072, 3, -917513, 131072, 3, -917514, 131072, 3, -917515, 131072, 3, -917516, 131072, 3, -917517, 131072, 3, -983039, 131072, 3, -983038, 131072, 3, -983037, 131072, 3, -983036, 131072, 3, -983035, 131072, 3, -983034, 131072, 3, -983033, 131072, 3, -983032, 131072, 3, -983031, 131072, 3, -983030, 131072, 3, -983029, 131072, 3, -983028, 131072, 3, -786444, 458752, 0, -655372, 65536, 1, -524300, 458752, 0, -458764, 65536, 1, -786443, 131072, 0, -655371, 196608, 0, -524299, 131072, 0, -458763, 196608, 0, -786442, 131072, 0, -655370, 196608, 0, -524298, 131072, 0, -458762, 196608, 0, -720908, 327680, 0, -786441, 393216, 0, -720905, 262144, 0, -655369, 0, 1, -524297, 393216, 0, -458761, 0, 1, -786439, 458752, 0, -655367, 65536, 1, -786438, 131072, 0, -655366, 196608, 0, -786437, 131072, 0, -655365, 196608, 0, -786436, 131072, 0, -655364, 196608, 0, -720903, 327680, 0, -786435, 393216, 0, -720899, 262144, 0, -655363, 0, 1)

[node name="Camera2D" type="Camera2D" parent="Node"]
zoom = Vector2(0.812, 0.812)

[connection signal="pressed" from="GameOverScreen/Try Again" to="GameOverScreen" method="_on_try_again_pressed"]
[connection signal="pressed" from="GameOverScreen/Quit" to="GameOverScreen" method="_on_quit_pressed"]
